
#include<iostream> using namespace std; #include <vector> #include <map> #include <set> #include <cmath> #include <deque> #include <algorithm> using namespace std; #define fs first #define sc second #define MAX 100000 #define pb push_back #define mp make_pair #define INF (1LL<<62) #define MOD 1000000007 #define MAXN 1000000 int phi[MAXN + 1], prime[MAXN/10], sz=0; vector<bool> mark(MAXN + 1); typedef long long Int; typedef pair<Int,Int> pii; typedef vector<Int> vi; typedef vector<pii> vii; deque<Int>D[MAX+5]; map<Int,Int>Map; map<Int,Int>::iterator it; struct qry { Int l,r,id; }S[MAX+5]; Int ans[MAX+5]; Int A[MAX+5],N,Q,M,B; void add(Int idx) { // cout<<idx<<" "<<endl; Int a=A[idx]; Int len=D[a].size(); if (len==0) { D[a].push_back(idx); return; } if (D[a][0]>idx) { Map[D[a][len-1]-D[a][0]]--; if (Map[D[a][len-1]-D[a][0]]==0) Map.erase(D[a][len-1]-D[a][0]); D[a].push_front(idx); Map[D[a][len]-D[a][0]]++; return; } Map[D[a][len-1]-D[a][0]]--; if (Map[D[a][len-1]-D[a][0]]==0) Map.erase(D[a][len-1]-D[a][0]); D[a].push_back(idx); Map[D[a][len]-D[a][0]]++; } void del(Int idx) { Int a=A[idx]; Int len=D[a].size(); if(len==0) { return ; } if (len==1) { D[a].pop_back(); return; } if (idx==D[a][0]) { Map[D[a][len-1]-D[a][0]]--; if (Map[D[a][len-1]-D[a][0]]==0) Map.erase(D[a][len-1]-D[a][0]); D[a].pop_front(); Map[D[a][len-2]-D[a][0]]++; return; } Map[D[a][len-1]-D[a][0]]--; if (Map[D[a][len-1]-D[a][0]]==0) Map.erase(D[a][len-1]-D[a][0]); D[a].pop_back(); Map[D[a][len-2]-D[a][0]]++; } bool cmp(qry a,qry b) { Int b1=(a.l)/B; Int b2=(b.l)/B; if (b1!=b2) return b1<b2; else return a.r<b.r; } int main() { phi[0]=0; phi[1] = 1; for (int i = 2; i <= MAXN; i++ ){ if(!mark[i]){ phi[i] = i-1; prime[sz++]= i; } for (int j=0; j<sz && prime[j]*i <= MAXN; j++ ){ mark[prime[j]*i]=1; if(i%prime[j]==0){ int ll = 0;int xx = i; while(xx%prime[j]==0) { xx/=prime[j]; ll++; } int mm = 1; for(int k=0;k<ll;k++)mm*=prime[j]; phi[i*prime[j]] = phi[xx]*mm*(prime[j]-1); break; } else phi[i*prime[j]] = phi[i]*(prime[j]-1 ); } } Map[0]=INF; A[0]=0; scanf("%lld %lld %lld",&N,&Q,&M); for (Int i=1;i<=N;++i) scanf("%lld",&A[i]); B=sqrt(N); for (Int i=1;i<=Q;++i) { scanf("%lld",&S[i].l); scanf("%lld",&S[i].r); S[i].id=i; } sort(S+1,S+Q+1,cmp); Int x=0,y=0; add(A[0]); for (Int i=1;i<=Q;++i) { Int left=S[i].l; Int right=S[i].r; // cout<<x<<" "<<y<<" "<<left<<" "<<right<<endl; while (y<right) { ++y; add(y); } while (y>right) { del(y); --y; } while (x<left) { del(x); ++x; } while (x>left) { --x; add(x); } it=Map.end(); --it; ans[S[i].id]=(it->fs); } for (Int i=1;i<=Q;++i) printf("%d\n",phi[ans[i]]); return 0; }
